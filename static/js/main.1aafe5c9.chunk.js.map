{"version":3,"sources":["modalConfirmationContext.js","DeleteButton.js","App.js","index.js"],"names":["ConfirmationModalContext","React","createContext","ConfirmationModalContextProvider","props","useState","showConfirmationModal","setShowConfirmationModal","resolver","useRef","Provider","value","showConfirmation","Promise","resolve","current","children","Modal","show","onHide","centered","dialogClassName","Body","Footer","className","onClick","DeleteButton","modalContext","useContext","handleOnClick","a","App","people","list","setList","Table","bordered","striped","map","person","first_name","last_name","email","gender","ip_address","id","splice","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kpDAGMA,EAA2BC,IAAMC,cAAc,IA4CtCC,EA1C0B,SAACC,GAAW,IAAD,EACUC,oBAAS,GADnB,mBACzCC,EADyC,KAClBC,EADkB,KAE1CC,EAAWC,mBAoBjB,OACI,eAACT,EAAyBU,SAA1B,CAAmCC,MAAO,CAACC,iBAnB5B,WAGf,OAFAL,GAAyB,GAElB,IAAIM,SAAQ,SAAUC,GACzBN,EAASO,QAAUD,OAevB,UACKV,EAAMY,SAEP,eAACC,EAAA,EAAD,CAAOC,KAAMZ,EAAuBa,OAAQ,kBAAMZ,GAAyB,IAAQa,UAAQ,EAACC,gBAAgB,WAA5G,UACI,cAACJ,EAAA,EAAMK,KAAP,UACI,uEAGJ,eAACL,EAAA,EAAMM,OAAP,WACI,wBAAQC,UAAU,kBAAkBC,QAf/B,WACjBjB,EAASO,SAAWP,EAASO,SAAQ,GACrCR,GAAyB,IAab,oBACA,wBAAQiB,UAAU,kBAAkBC,QArBnC,WACbjB,EAASO,SAAWP,EAASO,SAAQ,GACrCR,GAAyB,IAmBb,0BCpBLmB,EAfM,SAACtB,GAClB,IAAMuB,ED0CuCC,qBAAW5B,GCxClD6B,EAAa,uCAAG,sBAAAC,EAAA,sEACGH,EAAaf,mBADhB,eAERR,EAAMqB,UAFE,2CAAH,qDAKnB,OACI,wBAAQD,UAAWpB,EAAMoB,UAAWC,QAASI,EAA7C,SACKzB,EAAMY,YCqCJe,MA1Cf,WAAgB,IAAD,EACa1B,mBAAS2B,GADtB,mBACJC,EADI,KACEC,EADF,KAqBX,OACI,cAAC,EAAD,UACI,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,SAAO,EAACb,UAAU,gBAAlC,UACI,gCACA,+BACI,sCACA,2CACA,uCACA,wCACA,4CACA,4BAGJ,gCA1BUS,EAAKK,KAAI,SAAAC,GAAM,OACjC,+BACI,6BAAKA,EAAOC,aACZ,6BAAKD,EAAOE,YACZ,6BAAKF,EAAOG,QACZ,6BAAKH,EAAOI,SACZ,6BAAKJ,EAAOK,aACZ,6BACI,cAAC,EAAD,CAAcnB,QAAS,kBAbnBoB,EAagCN,EAAOM,GAZnDZ,EAAKa,OAAOb,EAAKc,WAAU,SAAAR,GAAM,OAAIA,EAAOM,KAAOA,KAAK,QACxDX,EAAQ,YAAID,IAFD,IAACY,GAa4CrB,UAAU,iBAA1D,wBAPCe,EAAOM,eCZxBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1aafe5c9.chunk.js","sourcesContent":["import React, {useContext, useRef, useState} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst ConfirmationModalContext = React.createContext({});\n\nconst ConfirmationModalContextProvider = (props) => {\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n    const resolver = useRef();\n\n    const handleShow = () => {\n        setShowConfirmationModal(true);\n\n        return new Promise(function (resolve) {\n            resolver.current = resolve;\n        });\n    };\n\n    const handleOk = () => {\n        resolver.current && resolver.current(true);\n        setShowConfirmationModal(false)\n    };\n\n    const handleCancel = () => {\n        resolver.current && resolver.current(false);\n        setShowConfirmationModal(false)\n    };\n\n    return (\n        <ConfirmationModalContext.Provider value={{showConfirmation: handleShow}}>\n            {props.children}\n\n            <Modal show={showConfirmationModal} onHide={() => setShowConfirmationModal(false)} centered dialogClassName=\"modal-xs\">\n                <Modal.Body>\n                    <label>Are you sure you want to delete?</label>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <button className=\"btn btn-default\" onClick={handleCancel}>Cancel</button>\n                    <button className=\"btn btn-primary\" onClick={handleOk}>OK</button>\n                </Modal.Footer>\n            </Modal>\n\n        </ConfirmationModalContext.Provider>\n    )\n};\n\nexport const useConfirmationModalContext = () => useContext(ConfirmationModalContext);\nexport default ConfirmationModalContextProvider;\n","import React from 'react';\nimport {useConfirmationModalContext} from \"./modalConfirmationContext\";\n\nconst DeleteButton = (props) => {\n    const modalContext = useConfirmationModalContext();\n\n    const handleOnClick = async () => {\n        const result = await modalContext.showConfirmation();\n        result && props.onClick();\n    };\n\n    return (\n        <button className={props.className} onClick={handleOnClick}>\n            {props.children}\n        </button>\n    )\n};\n\nexport default DeleteButton;\n","import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport people from './people';\nimport Table from \"react-bootstrap/Table\";\nimport DeleteButton from \"./DeleteButton\";\nimport ConfirmationModalContextProvider from \"./modalConfirmationContext\";\n\nfunction App() {\n    const [list, setList] = useState(people);\n\n    const remove = (id) => {\n        list.splice(list.findIndex(person => person.id === id), 1);\n        setList([...list]);\n    };\n\n    const getRows = () => list.map(person => (\n        <tr key={person.id}>\n            <td>{person.first_name}</td>\n            <td>{person.last_name}</td>\n            <td>{person.email}</td>\n            <td>{person.gender}</td>\n            <td>{person.ip_address}</td>\n            <td>\n                <DeleteButton onClick={() => remove(person.id)} className=\"btn btn-danger\">Delete</DeleteButton>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <ConfirmationModalContextProvider>\n            <Table bordered striped className=\"w-auto m-auto\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Gender</th>\n                    <th>IP Address</th>\n                    <th/>\n                </tr>\n                </thead>\n                <tbody>\n                {getRows()}\n                </tbody>\n            </Table>\n        </ConfirmationModalContextProvider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}